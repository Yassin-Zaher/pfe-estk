generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

enum PhoneModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
  tshirt
  hoodie
  iphone
  custom
}

enum CaseMaterial {
  silicone
  polycarbonate
}

enum CaseFinish {
  smooth
  textured
}

enum CaseColor {
  black
  blue
  rose
}

model Configuration {
  id              String        @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  color           CaseColor?
  model           PhoneModel?
  material        CaseMaterial?
  finish          CaseFinish?
  croppedImageUrl String?
  Order           Order[]
}

model User {
  id    String  @id @default(cuid())
  email String @unique
  clerkId String?
  password String
  Order Order[]
  Image Image[]
  photo String?
  firstName String?
  lastName String?
  planId Int?
  creditBalance Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Order {
  id              String        @id @default(cuid())
  configurationId String
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  isPaid          Boolean       @default(false)
  status          OrderStatus   @default(awaiting_shipment)

  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  billingAddress    BillingAddress?  @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?

  createdAt DateTime @default(now())
  updated   DateTime @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model Board {
  id       String @id @default(cuid())
  title    String 
  orgId String 
  authorId String 
  authorName String
  imageUrl String
  userFavourites UserFavourite[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserFavourite {
  id        String @id @default(cuid())
  userId    String
  orgId     String
  boardId   String
  Board     Board  @relation(fields: [boardId], references: [id])
  @@unique([userId, boardId])
}

model Image {
  id                 String   @id @default(cuid())
  title              String
  transformationType String
  publicId           String
  secureURL          String
  width              Int?
  height             Int?
  config             Json?
  transformationURL  String?
  aspectRatio        String?
  color              String?
  prompt             String?
  authorId           String?  
  author             User?    @relation(fields: [authorId], references: [id])
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt


}


model Product {
  id              String        @id @default(cuid())
  title           String
  description     String
  thumbnailUrl    String
  priceBase       Float?
  imageUrl        String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map("products")
}
